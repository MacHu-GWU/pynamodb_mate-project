# comprehensive github action yml reference: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions

---
name: CI

on:
  push: # any push event to master will trigger this
    branches: ["master"]
  pull_request: # any pull request to master will trigger this
    branches: ["master"]
  workflow_dispatch: # allows you to manually trigger run

jobs:
  tests:
    name: "${{ matrix.os }} Python ${{ matrix.python-version }}"
    runs-on: "${{ matrix.os }}" # for all available VM runtime, see this: https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
    env: # define environment variables
      USING_COVERAGE: "3.7,3.8,3.9,3.10,3.11,3.12"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
#        os: ["ubuntu-latest", ] # for debug only
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
#        python-version: ["3.7", ] # for debug only
        exclude:
          - os: windows-latest # this is a useless exclude rules for demonstration use only
            python-version: 2.7
    steps:
      - uses: "actions/checkout@v3" # https://github.com/marketplace/actions/checkout
      - uses: "actions/setup-python@v4" # https://github.com/marketplace/actions/setup-python
        with:
          python-version: "${{ matrix.python-version }}"

      - if: matrix.os == 'ubuntu-latest' # for condition steps, you should put if at begin, and use single quote for logical expression
        name: "Install dependencies on MacOS or Linux"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel virtualenv
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install .
      - if: matrix.os == 'windows-latest'
        name: "Install dependencies on Windows"
        run: |
          python -m site
          python -m pip install --upgrade pip setuptools wheel virtualenv
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install .
      - name: "Run pytest"
        run: "python -m pytest tests --cov=pynamodb_mate"
      # don't forget to goto codecov.io, enable your repo, copy the token
      # create an CODECOV_TOKEN env var in GitHub actions secret
      - name: "Upload coverage to Codecov"
        if: "${{ contains(env.USING_COVERAGE, matrix.python-version) && github.ref == 'refs/heads/master' }}"
        uses: "codecov/codecov-action@v4" # https://github.com/marketplace/actions/codecov
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: MacHu-GWU/sqlalchemy_mate-project
          fail_ci_if_error: true
